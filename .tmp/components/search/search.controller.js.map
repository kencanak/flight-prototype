{"version":3,"sources":["components/search/search.controller.js"],"names":["SearchController","$state","$scope","Airports","errors","airportsData","minDate","Date","maxPassengers","Array","tripDetails","from","fromCode","to","toCode","return","departDate","returnDate","moment","add","toDate","passengers","priceMax","sliderValue","self","get","$promise","then","i","response","data","length","push","code","city","$watch","newValue","oldValue","beginSearch","item","source","tmpval","value","keywords","type","filter","searchFilter","query","lowercaseQuery","angular","lowercase","filterFn","airport","tmp","display","indexOf","$emit","module","controller"],"mappings":"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","file":"search.controller.js","sourcesContent":["'use strict';\n\nclass SearchController {\n  constructor($state, $scope, Airports) {\n    this.errors = {};\n    this.$state = $state;\n    this.$scope = $scope;\n    this.airportsData = [];\n    this.Airports = Airports;\n    this.minDate = new Date();\n    this.maxPassengers = new Array(8);\n\n    this.tripDetails = {\n      from: '',\n      fromCode: '',\n      to: '',\n      toCode: '',\n      return: true,\n      departDate: this.minDate,\n      returnDate: moment(this.minDate).add(5, 'days').toDate(),\n      passengers: 1,\n      priceMax: 200\n    };\n\n    this.sliderValue = this.tripDetails.priceMax;\n  }\n\n  $onInit() {\n    var self = this;\n\n    //let's get all airports list\n    self.Airports.get().$promise.then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        self.airportsData.push({\n          'value': response.data[i].code,\n          'display': response.data[i].city + ' (' + response.data[i].code + ')'\n        });\n      }\n    });\n\n    //let's watch the price range slider value, on change, reload the search results\n    self.$scope.$watch(function() {\n        return self.sliderValue;\n      },\n      function(newValue, oldValue) {\n        if (newValue !== oldValue) {\n          self.tripDetails.priceMax = self.sliderValue;\n          self.beginSearch();\n        }\n      }\n    );\n  }\n\n  selectAirport(item, source) {\n    var self = this;\n    var tmpval = '';\n\n    if (item) {\n      tmpval = item.value;\n    }\n\n    //on select, grab airport code value, our trip search query is based on airport code\n    self.tripDetails[source + 'Code'] = tmpval;\n  }\n\n  queryAirports(keywords, type) {\n    var self = this;\n    return self.airportsData.filter( self.searchFilter(keywords, type) );\n  }\n\n  //this is for case-insensitivity handler and for excluding the list from the origin/destination vice versa\n  searchFilter(query, type) {\n    var self = this;\n    var lowercaseQuery = angular.lowercase(query);\n    return function filterFn(airport) {\n      var tmp = angular.lowercase(airport.display);\n\n      return (tmp.indexOf(lowercaseQuery) === 0 && tmp !== angular.lowercase(self.tripDetails[type]));\n    };\n  }\n\n  toggleTrip() {\n    //toggle return / oneway trip\n    this.tripDetails.return = !this.tripDetails.return;\n  }\n\n  beginSearch() {\n    //broadcast search event\n    this.$scope.$emit('new-search', this.tripDetails);\n  }\n}\n\nangular.module('thoughtworksTestApp')\n  .controller('SearchController', SearchController);\n"]}